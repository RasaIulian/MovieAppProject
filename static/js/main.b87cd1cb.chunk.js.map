{"version":3,"sources":["components/sections/imdbList/Hero/Hero.style.js","components/sections/imdbList/Hero/Hero.jsx","components/sections/imdbList/Titles/TitlesList.style.js","components/sections/imdbList/Titles/TitlesList.jsx","components/Header/Header.style.js","components/Header/UI/Favourites/Favorites.style.js","components/Header/UI/Favourites/Favorites.jsx","components/Header/HomePageHeader.jsx","components/Header/MovieHeader.jsx","components/Header/UI/Input/Input.style.js","components/Header/UI/Input/Input.jsx","components/Footer/Footer.style.js","components/Footer/Footer.jsx","components/Layout/HomePageLayout.jsx","components/Layout/MovieLayout.jsx","components/hooks/useGetTitles.js","components/GoTopButton/GoTopButton.jsx","pages/HomePage.jsx","components/sections/TitleDetails/TitleDetails.style.js","components/sections/TitleDetails/TitleDetails.jsx","pages/MoviePage.jsx","App.js","index.js"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","Hero","_ref","children","React","createElement","Background","MoviesWrapper","_templateObject3","_templateObject4","textOpacityAnimation","keyframes","_templateObject5","Loader","_templateObject6","Error","_templateObject7","MovieCard","_templateObject8","PosterWrapper","_templateObject9","Poster","img","_templateObject10","Info","h2","_templateObject11","Min","_templateObject12","size","FavoriteButton","FontAwesomeIcon","attrs","_ref2","icon","style","color","ismoviefavorite","_templateObject13","ButtonContainer","_templateObject14","_templateObject15","StyledButton","button","_templateObject16","_ref3","active","css","_templateObject17","TitlesList","fetching","titleInfo","error","handleFavoriteClick","favoriteMovies","listType","length","map","movie","some","favMovie","id","Link","key","to","concat","src","primaryImage","averageRating","originalTitle","Date","releaseDate","toLocaleDateString","replace","runtimeMinutes","genres","g","index","reduce","prev","curr","fasStar","farStar","onClick","e","stopPropagation","title","Header","Logo","Nav","nav","DefaultLink","GenreContainer","GenreSelect","select","Option","option","FavoritesStyle","Favorites","toggleShowFavorites","data-favorites","HomePageHeader","searchValue","handleSearch","handleHomeClick","favoritesButtonClicked","selectedGenre","setSelectedGenre","alt","value","onChange","target","genre","Input","type","placeholder","MovieHeader","noMargin","SearchIcon","baseStyle","InputElement","input","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","faSearch","onFocus","onBlur","name","FooterText","h3","Contact","a","Footer","href","HomePageLayout","Fragment","MovieLayout","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","useGetTitles","titleId","setTitleInfo","_useState3","_useState4","setError","_useState5","_useState6","setFetching","fetchingRef","useRef","options","url","headers","x-rapidapi-key","process","x-rapidapi-host","getImdbTitleDetails","_getImdbTitleDetails","apply","arguments","_asyncToGenerator","_callee","startTime","_yield$axios$request","data","status","statusText","elapsedTime","_context","current","now","axios","request","setTimeout","localStorage","setItem","JSON","stringify","t0","response","message","useEffect","cachedData","getItem","cachedTimestamp","isCacheValid","parse","styles","height","width","position","bottom","right","fontSize","lineHeight","backgroundColor","border","borderRadius","cursor","transition","transform","hover","default","GoToTopButton","isVisible","setIsVisible","isHovered","setIsHovered","toggleVisibility","window","scrollY","addEventListener","removeEventListener","scrollTo","top","behavior","_objectSpread","onMouseEnter","onMouseLeave","HomePage","setListType","_useGetTitles","allTitles","setAllTitles","filteredTitles","setFilteredTitles","_useState7","_useState8","setSearchValue","_useState9","_useState10","isSearching","setIsSearching","_useState11","_useState12","setFavoriteMovies","_useState13","_useState14","showFavorites","setShowFavorites","_useState15","_useState16","setFavoritesButtonClicked","_useState17","_useState18","debouncedSearch","func","wait","timeout","debounced","_len","args","Array","_key","clearTimeout","clear","debounce","lowerCaseSearch","toLowerCase","filter","includes","updatedFavorites","_toConsumableArray","filterMoviesByGenre","movies","handleListTypeChange","newListType","prevShowFavorites","prevFavoritesButtonClicked","InfoCard","ImdbLink","iframe","TitleDetails","description","directors","director","rel","fullName","budget","toLocaleString","grossWorldwide","gen","cast","actor","writers","writer","contentRating","MoviePage","useParams","location","useLocation","URLSearchParams","search","get","primaryTitle","routes","path","component","basename","App","BrowserRouter","Routes","route","Route","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b87cd1cb.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 8vh;\r\n  background-image: linear-gradient(#fafafa, lightgrey);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  line-height: 1.05em;\r\n  color: #2b2922;\r\n  width: 100%;\r\n  max-width: 60rem;\r\n  text-align: center;\r\n  margin: 0.5rem auto;\r\n  padding: 1rem;\r\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.2);\r\n  border-radius: 3px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container, Title } from \"./Hero.style\";\r\n\r\nexport function Hero({ children }) {\r\n  return (\r\n    <Container>\r\n      <Title>{children}</Title>\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css, keyframes } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Background = styled.div`\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 2rem 1.5rem;\r\n  min-height: 76dvh;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 155rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  color: #fafafa;\r\n`;\r\n\r\nexport const MoviesWrapper = styled.div`\r\n  min-height: 20rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\n// Define the opacity animation\r\nconst textOpacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.5; // 50% opacity\r\n  }\r\n  100% {\r\n    opacity: 1; // 100% opacity\r\n  }\r\n`;\r\nexport const Loader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: #ff8427;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  span{animation: ${textOpacityAnimation} 1s infinite alternate};\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: rgb(255, 39, 39);\r\n  font-size: 1.6rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const MovieCard = styled.div`\r\n  max-width: 25rem;\r\n  width: 100%;\r\n  margin: 0 1.5rem 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: top;\r\n  align-items: center;\r\n  padding: 1.5rem 1.5rem;\r\n  background-color: #fafafa;\r\n  text-align: center;\r\n  border-radius: 3rem;\r\n  transition: background-color 0.2s ease-in-out;\r\n\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background-color: #eaeaea;\r\n  }\r\n`;\r\n\r\nexport const PosterWrapper = styled.div`\r\n  width: 25rem;\r\n  overflow: hidden;\r\n  border-top-left-radius: 1.8rem;\r\n  border-top-right-radius: 1.8rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n  border-bottom-left-radius: 0.5rem;\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  width: 100%;\r\n  height: 36rem;\r\n  object-fit: cover;\r\n  border-radius: 1.8rem 1.8rem 0.5rem 0.5rem;\r\n  display: block;\r\n  transition: transform 0.1s ease-in-out;\r\n\r\n  ${MovieCard}:hover & {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const Info = styled.h2`\r\n  font-size: 1.8rem;\r\n  line-height: 2.4rem;\r\n  font-weight: bold;\r\n  color: #2b2922;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const Min = styled.div`\r\n  min-height: ${({ size }) => size};\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n`;\r\n\r\nexport const FavoriteButton = styled(FontAwesomeIcon).attrs(\r\n  ({ icon, ismoviefavorite }) => ({\r\n    icon,\r\n    style: {\r\n      color: ismoviefavorite === \"true\" ? \"gold\" : \"rgba(100, 100, 100, 0.5)\",\r\n    },\r\n  })\r\n)`\r\n  display: inline-block;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  z-index: 4;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const SearchError = styled.div`\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin: 2rem 0;\r\n  font-size: 1.5rem;\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 2rem 1.5rem;\r\n  min-height: 62vh;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 1rem 0 0;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0 0.5rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1.6rem;\r\n  transition: background-color 0.3s;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      background-image: linear-gradient(#1e212b, lightgrey);\r\n      font-weight: bold;\r\n    `}\r\n\r\n  &:hover {\r\n    background-image: linear-gradient(#1e212b, lightgrey);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Error,\r\n  MovieCard,\r\n  PosterWrapper,\r\n  Poster,\r\n  Info,\r\n  Min,\r\n  FavoriteButton,\r\n  Loader,\r\n} from \"./TitlesList.style\";\r\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function TitlesList({\r\n  fetching,\r\n  titleInfo,\r\n  error,\r\n  handleFavoriteClick,\r\n  favoriteMovies,\r\n  listType, // Add listType prop\r\n}) {\r\n  // console.log(\r\n  //   \"TitlesList render - fetching:\",\r\n  //   fetching,\r\n  //   \"titleInfo length:\",\r\n  //   titleInfo && titleInfo.length\r\n  // );\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <MoviesWrapper>\r\n          {fetching ? (\r\n            <Loader>\r\n              <span>\r\n                Loading{\" \"}\r\n                {listType === \"top250\"\r\n                  ? \"top 250 IMDB movies\"\r\n                  : \"most popular movies\"}\r\n                ...\r\n              </span>{\" \"}\r\n            </Loader>\r\n          ) : error ? (\r\n            <Error>Error: {error}</Error>\r\n          ) : !titleInfo || titleInfo.length === 0 ? (\r\n            <Error>No movies available</Error>\r\n          ) : (\r\n            titleInfo.map((movie) => {\r\n              const ismoviefavorite = favoriteMovies.some(\r\n                (favMovie) => favMovie.id === movie.id\r\n              );\r\n\r\n              return (\r\n                <MovieCard>\r\n                  <Min size=\"40rem\">\r\n                    <Link\r\n                      key={movie.id}\r\n                      to={`/${movie.id}?listType=${listType}`}\r\n                    >\r\n                      {/* This Link component will navigate to the movie details page */}\r\n                      <PosterWrapper>\r\n                        <Poster src={movie.primaryImage} />\r\n                      </PosterWrapper>\r\n                      <Info>Rating: {movie.averageRating}</Info>\r\n                      <Min size=\"8rem\">\r\n                        <Info>{movie.originalTitle}</Info>\r\n                      </Min>\r\n                      <Info>\r\n                        Release date:{\" \"}\r\n                        {new Date(movie.releaseDate)\r\n                          .toLocaleDateString(\"en-GB\")\r\n                          .replace(/\\//g, \".\")}\r\n                      </Info>{\" \"}\r\n                      <Info>Runtime: {movie.runtimeMinutes}min</Info>\r\n                      <Min size=\"8rem\">\r\n                        <Info>\r\n                          Genre:{\" \"}\r\n                          {movie.genres\r\n                            .map((g, index) => <span key={index}>{g}</span>)\r\n                            .reduce((prev, curr) => [prev, \", \", curr])}\r\n                        </Info>\r\n                      </Min>\r\n                    </Link>\r\n                  </Min>\r\n                  <FavoriteButton\r\n                    icon={ismoviefavorite === true ? fasStar : farStar}\r\n                    ismoviefavorite={ismoviefavorite ? \"true\" : \"false\"}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation(); // Prevent propagation to the parent link\r\n                      handleFavoriteClick(movie);\r\n                    }}\r\n                    title=\"Add/Remove Favourite\"\r\n                  />\r\n                </MovieCard>\r\n              );\r\n            })\r\n          )}\r\n        </MoviesWrapper>\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link as DefaultLink } from \"react-router-dom\";\r\n\r\nexport const Header = styled.div`\r\n  padding: 0.5rem 1.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-image: linear-gradient(#1e212bbd, #eaeaea);\r\n  min-height: 5rem;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  display: block;\r\n  z-index: 9999;\r\n  max-height: 4rem;\r\n  border-radius: 1rem;\r\n  margin: 8px 1.6rem 8px 0;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: transform 0.3s;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 150rem;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Link = styled(DefaultLink)`\r\n  color: #fafafa;\r\n  background-color: #1e212b;\r\n  display: block;\r\n  font-size: 1.8rem;\r\n  line-height: 3rem;\r\n  font-weight: 600;\r\n  padding: 8px 1.6rem;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: transform 0.3s;\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const GenreContainer = styled.div`\r\n  position: absolute;\r\n  left: 19rem;\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const GenreSelect = styled.select`\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  height: 4rem;\r\n  color: #2b2922;\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  background-color: rgba(200, 200, 200, 0.9);\r\n  border-radius: 1rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: box-shadow 0.3s;\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Option = styled.option`\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavoritesStyle = styled.div`\r\n  display: flex;\r\n  border-radius: 1rem;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #2b2922;\r\n  background-color: rgba(200, 200, 200, 0.9);\r\n  z-index: 5;\r\n  height: 3rem;\r\n  padding: 0.5rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  transition: box-shadow 0.3s;\r\n  &:active,\r\n  :focus {\r\n    box-shadow: none;\r\n  }\r\n\r\n  &::after {\r\n    content: attr(data-favorites);\r\n    margin-left: 0.5rem;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 5.1rem;\r\n    color: #2b2922;\r\n    z-index: 6;\r\n    font-size: 1.6rem;\r\n    line-height: 2.4rem;\r\n    width: 2rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  FavoriteButton,\r\n  Info,\r\n} from \"../../../sections/imdbList/Titles/TitlesList.style\";\r\nimport { FavoritesStyle } from \"./Favorites.style\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container, Nav } from \"../../Header.style\";\r\n\r\nexport const Favorites = ({ favoriteMovies, toggleShowFavorites }) => {\r\n  const ismoviefavorite = favoriteMovies.length > 0;\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <FavoritesStyle\r\n          onClick={toggleShowFavorites}\r\n          data-favorites={ismoviefavorite ? favoriteMovies.length : \"\"}\r\n          title={\r\n            ismoviefavorite === true\r\n              ? favoriteMovies.length + \" Favorites\"\r\n              : \"No favorite movies selected.\"\r\n          }\r\n        >\r\n          <Info>Fav&nbsp;</Info>\r\n          <FavoriteButton\r\n            icon={ismoviefavorite === true ? fasStar : farStar}\r\n            ismoviefavorite={ismoviefavorite ? \"true\" : \"false\"}\r\n          />\r\n        </FavoritesStyle>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Header,\r\n  Logo,\r\n  Container,\r\n  GenreContainer,\r\n  GenreSelect,\r\n  Option,\r\n} from \"./Header.style\";\r\nimport { Link as DefaultLink } from \"react-router-dom\";\r\nimport { Input } from \"./\";\r\nimport { Favorites } from \"./UI/Favourites/Favorites\";\r\n\r\nexport function HomePageHeader({\r\n  searchValue,\r\n  handleSearch,\r\n  favoriteMovies,\r\n  toggleShowFavorites,\r\n  handleHomeClick,\r\n  favoritesButtonClicked,\r\n  selectedGenre,\r\n  setSelectedGenre,\r\n  genres,\r\n}) {\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <DefaultLink to=\"/\" onClick={handleHomeClick}>\r\n          <Logo\r\n            src=\"https://images.pexels.com/photos/274937/pexels-photo-274937.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=100&w=100\"\r\n            alt=\"Reload Logo\"\r\n            title=\"Home\"\r\n          />\r\n        </DefaultLink>\r\n\r\n        <Favorites\r\n          favoriteMovies={favoriteMovies}\r\n          toggleShowFavorites={toggleShowFavorites}\r\n        >\r\n          Fav\r\n        </Favorites>\r\n\r\n        <GenreContainer>\r\n          <GenreSelect\r\n            id=\"genre-select\"\r\n            value={selectedGenre}\r\n            onChange={(e) => setSelectedGenre(e.target.value)}\r\n          >\r\n            <Option value=\"\" title=\"Genres filter\">\r\n              All Genres\r\n            </Option>\r\n            {genres &&\r\n              genres.map((genre) => (\r\n                <Option key={genre} value={genre}>\r\n                  {genre}\r\n                </Option>\r\n              ))}\r\n          </GenreSelect>\r\n        </GenreContainer>\r\n\r\n        {!favoritesButtonClicked && (\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"\"\r\n            id=\"Search\"\r\n            value={searchValue}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n          />\r\n        )}\r\n      </Container>\r\n    </Header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Header, Link, Nav, Container } from \"./Header.style\";\r\n\r\nexport function MovieHeader() {\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <Nav>\r\n          <Link to=\"/\">HomePage</Link>\r\n        </Nav>\r\n      </Container>\r\n    </Header>\r\n  );\r\n}\r\n","import styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  min-width: 30rem;\r\n\r\n  ${({ noMargin }) =>\r\n    noMargin\r\n      ? \"\"\r\n      : css`\r\n          margin-bottom: 1rem;\r\n        `}\r\n`;\r\n\r\nexport const SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  display: block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  right: 1rem;\r\n  transform: translateY(-45%);\r\n  color: rgba(100, 100, 100, 0.5);\r\n  z-index: 4;\r\n`;\r\n\r\nconst baseStyle = css`\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  color: #1e212b;\r\n  display: block;\r\n  max-width: 20%;\r\n  padding: 0.7rem 1rem;\r\n  border-radius: 1rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin: 5px 0;\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const InputElement = styled.input`\r\n  ${baseStyle}\r\n  &[type=\"search\"] {\r\n    height: 4rem;\r\n    position: absolute;\r\n    right: 0;\r\n    transform: translateY(-60%);\r\n    background-color: rgba(200, 200, 200, 0.9);\r\n    font-size: 1.7rem;\r\n    z-index: 3;\r\n  }\r\n`;\r\n","import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Container, InputElement, SearchIcon } from \"./Input.style\";\r\n\r\nexport function Input({ type, value, onChange, placeholder }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  return (\r\n    <Container noMargin>\r\n      {!isFocused && <SearchIcon icon={faSearch} />}{\" \"}\r\n      {/* Conditional rendering of the search icon */}\r\n      <InputElement\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        name=\"search\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: #1e212b;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n`;\r\n\r\nexport const FooterText = styled.h3`\r\n  color: #fafafa;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  font-weight: 400;\r\n  padding: 1rem 1.5rem;\r\n  text-align: right;\r\n  &:screen {\r\n  }\r\n`;\r\n\r\nexport const Contact = styled.a`\r\n  color: #fafafa;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  font-weight: 400;\r\n  transition: color 0.3s;\r\n  &:hover {\r\n    color: lightskyblue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, FooterText, Contact } from \"./Footer.style\";\r\n\r\nexport function Footer() {\r\n  return (\r\n    <Container>\r\n      <FooterText>\r\n        Designed and developed by: <br></br>\r\n        <Contact href=\"mailto:ilie.rasa@gmail.com\">\r\n          Rasa I. Front-end Developer\r\n        </Contact>{\" \"}\r\n      </FooterText>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HomePageHeader } from \"../Header\";\r\nimport { Footer } from \"../Footer\";\r\n\r\nexport function HomePageLayout({\r\n  children,\r\n  searchValue,\r\n  handleSearch,\r\n  handleHomeClick,\r\n  favoriteMovies,\r\n  toggleShowFavorites,\r\n  favoritesButtonClicked,\r\n  selectedGenre, // Add selectedGenre prop\r\n  setSelectedGenre, // Add setSelectedGenre prop\r\n  genres, // Add genres prop\r\n}) {\r\n  return (\r\n    <>\r\n      <HomePageHeader\r\n        searchValue={searchValue}\r\n        handleSearch={handleSearch}\r\n        favoriteMovies={favoriteMovies}\r\n        toggleShowFavorites={toggleShowFavorites}\r\n        handleHomeClick={handleHomeClick}\r\n        favoritesButtonClicked={favoritesButtonClicked}\r\n        selectedGenre={selectedGenre} // Pass selectedGenre prop\r\n        setSelectedGenre={setSelectedGenre} // Pass setSelected\r\n        genres={genres} // Pass genres prop\r\n      />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MovieHeader } from \"../Header\";\r\nimport { Footer } from \"../Footer\";\r\n\r\nexport function MovieLayout({ children }) {\r\n  return (\r\n    <>\r\n      <MovieHeader />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function useGetTitles(titleId, listType) {\r\n  const [titleInfo, setTitleInfo] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [fetching, setFetching] = useState(true);\r\n  const fetchingRef = useRef(fetching); // Use ref to track fetching state\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n  const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: titleId \r\n      ? `https://imdb236.p.rapidapi.com/imdb/${titleId}` \r\n      : listType === \"mostPopular\"\r\n        ? 'https://imdb236.p.rapidapi.com/imdb/most-popular-movies'\r\n        : 'https://imdb236.p.rapidapi.com/imdb/top250-movies',\r\n    headers: {\r\n      'x-rapidapi-key': apiKey,\r\n      'x-rapidapi-host': 'imdb236.p.rapidapi.com'\r\n    }\r\n  };\r\n\r\n  async function getImdbTitleDetails() {\r\n    try {\r\n      setFetching(true);\r\n      fetchingRef.current = true; // Update ref\r\n      \r\n      // Add minimum loading time of 1 second\r\n      const startTime = Date.now();\r\n      const { data, status, statusText } = await axios.request(options);\r\n      const elapsedTime = Date.now() - startTime;\r\n      const minimumLoadTime = 1000; // 1 second minimum loading time\r\n      \r\n      if (elapsedTime < minimumLoadTime) {\r\n        await new Promise(resolve => setTimeout(resolve, minimumLoadTime - elapsedTime));\r\n      }\r\n\r\n      if (status === 200) {\r\n        setTitleInfo(data);\r\n        // Restore cache storage\r\n        if (titleId) {\r\n          localStorage.setItem(`title_${titleId}`, JSON.stringify(data));\r\n          localStorage.setItem(`title_${titleId}_timestamp`, Date.now());\r\n        } else {\r\n          localStorage.setItem(listType, JSON.stringify(data));\r\n          localStorage.setItem(`${listType}_timestamp`, Date.now());\r\n        }\r\n        setFetching(false);\r\n        fetchingRef.current = false; // Update ref\r\n      } else {\r\n        setError(statusText);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        setError(\r\n          `Status ${err.response.status}; ${err.response.data.message}` ||\r\n            `Error ${err.response.status}: ${err.response.statusText}`\r\n        );\r\n      } else if (err.request) {\r\n        setError(\"No response from server. Please try again.\");\r\n      } else {\r\n        setError(err.message);\r\n      }\r\n    } finally {\r\n      setFetching(false);\r\n      fetchingRef.current = false; // Update ref\r\n      // console.log(\"fetching fetch finish: \" + fetchingRef.current); // Debugging log\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Reset states when listType changes\r\n    setTitleInfo([]);\r\n    setError(\"\");\r\n    setFetching(true);\r\n    fetchingRef.current = true;\r\n\r\n    // console.log(\"Starting fetch for listType:\", listType);\r\n\r\n    // Restore cache checking\r\n    if (titleId) {  \r\n      const cachedData = localStorage.getItem(`title_${titleId}`);\r\n      const cachedTimestamp = localStorage.getItem(`title_${titleId}_timestamp`);\r\n      const isCacheValid = cachedTimestamp && (Date.now() - cachedTimestamp < CACHE_DURATION);\r\n\r\n      if (cachedData && isCacheValid) {\r\n        // Add artificial delay even for cached data\r\n        setTimeout(() => {\r\n          setTitleInfo(JSON.parse(cachedData));\r\n          setFetching(false);\r\n          fetchingRef.current = false;\r\n        }, 1000);\r\n      } else {\r\n        getImdbTitleDetails();\r\n      }\r\n    } else {\r\n      const cachedData = localStorage.getItem(listType);\r\n      const cachedTimestamp = localStorage.getItem(`${listType}_timestamp`);\r\n      const isCacheValid = cachedTimestamp && (Date.now() - cachedTimestamp < CACHE_DURATION);\r\n\r\n      if (cachedData && isCacheValid) {\r\n        // Add artificial delay even for cached data\r\n        setTimeout(() => {\r\n          setTitleInfo(JSON.parse(cachedData));\r\n          setFetching(false);\r\n          fetchingRef.current = false;\r\n        }, 1000);\r\n      } else {\r\n        getImdbTitleDetails();\r\n      }\r\n    }\r\n\r\n  }, [titleId, listType]);\r\n\r\n  return { fetching, titleInfo, error };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst GoToTopButton = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const toggleVisibility = () => {\r\n    if (window.scrollY > 600) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsHovered(false);\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isVisible && (\r\n        <button\r\n          title=\"Go to top\"\r\n          onClick={scrollToTop}\r\n          style={{\r\n            ...styles.button,\r\n            ...(isHovered ? styles.hover : styles.default),\r\n          }}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  button: {\r\n    height: \"4rem\",\r\n    width: \"4rem\",\r\n    position: \"fixed\",\r\n    bottom: \"1.5rem\",\r\n    right: \"1rem\",\r\n    fontSize: \"1.8rem\",\r\n    lineHeight: \"3rem\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    color: \"#1e212b\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.3s ease\",\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n  hover: {\r\n    backgroundColor: \"rgba(30, 33, 43, 0.5)\",\r\n    color: \"#fff\",\r\n  },\r\n  default: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    color: \"#1e212b\",\r\n  },\r\n};\r\n\r\nexport default GoToTopButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Hero, TitlesList } from \"../components/sections/imdbList\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Loader,\r\n  Error,\r\n  ButtonContainer,\r\n  StyledButton,\r\n} from \"../components/sections/imdbList/Titles/TitlesList.style\";\r\nimport { HomePageLayout } from \"../components/Layout\";\r\nimport { useGetTitles } from \"../components/hooks/useGetTitles\";\r\nimport GoToTopButton from \"../components/GoTopButton/GoTopButton\";\r\n\r\nexport function HomePage() {\r\n  const [listType, setListType] = useState(\"top250\");\r\n  const { fetching, titleInfo, error } = useGetTitles(null, listType);\r\n  const [allTitles, setAllTitles] = useState([]);\r\n  const [filteredTitles, setFilteredTitles] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [favoriteMovies, setFavoriteMovies] = useState(\r\n    JSON.parse(localStorage.getItem(\"favoriteMovies\")) || []\r\n  ); // Load favorite movies from local storage\r\n  const [showFavorites, setShowFavorites] = useState(false);\r\n  const [favoritesButtonClicked, setFavoritesButtonClicked] = useState(false);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // New state for selected genre\r\n\r\n  const genres = [\r\n    \"Action\",\r\n    \"Adventure\",\r\n    \"Animation\",\r\n    \"Comedy\",\r\n    \"Drama\",\r\n    \"Fantasy\",\r\n    \"Horror\",\r\n    \"Mystery\",\r\n    \"Romance\",\r\n    \"Sci-Fi\",\r\n  ];\r\n\r\n  const handleHomeClick = () => {\r\n    setShowFavorites(false); // Reset showFavorites state\r\n    setFavoritesButtonClicked(false); // Reset favoritesButtonClicked state\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAllTitles(titleInfo);\r\n  }, [titleInfo]);\r\n\r\n  //ensure that the search function is not called on every keystroke but only after the user has stopped typing for a specified delay\r\n  function debounce(func, wait) {\r\n    let timeout;\r\n\r\n    const debounced = (...args) => {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n\r\n    debounced.clear = function () {\r\n      clearTimeout(timeout);\r\n    };\r\n\r\n    return debounced;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsSearching(true);\r\n    const debouncedSearch = debounce(() => {\r\n      if (searchValue) {\r\n        const lowerCaseSearch = searchValue.toLowerCase();\r\n        const filteredTitles = allTitles.filter((movie) =>\r\n          movie.originalTitle.toLowerCase().includes(lowerCaseSearch)\r\n        );\r\n        setFilteredTitles(filteredTitles);\r\n        setIsSearching(false);\r\n      } else {\r\n        setFilteredTitles([]);\r\n        setIsSearching(false);\r\n      }\r\n    }, 300);\r\n    debouncedSearch();\r\n\r\n    return () => {\r\n      debouncedSearch.clear();\r\n    };\r\n  }, [searchValue, allTitles]);\r\n\r\n  useEffect(() => {\r\n    // Save favorite movies to local storage whenever they are updated\r\n    localStorage.setItem(\"favoriteMovies\", JSON.stringify(favoriteMovies));\r\n  }, [favoriteMovies]);\r\n\r\n  const handleFavoriteClick = (movie) => {\r\n    const isAlreadyFavorite = favoriteMovies.some(\r\n      (favMovie) => favMovie.id === movie.id\r\n    );\r\n\r\n    if (isAlreadyFavorite) {\r\n      const updatedFavorites = favoriteMovies.filter(\r\n        (favMovie) => favMovie.id !== movie.id\r\n      );\r\n      setFavoriteMovies(updatedFavorites);\r\n\r\n      // Check if there are any favorite movies left after removing the current movie\r\n      if (updatedFavorites.length === 0) {\r\n        setShowFavorites(false); // No favorite movies left, hide favorites\r\n        setFavoritesButtonClicked(false); // Reset favorites button click state\r\n      }\r\n    } else {\r\n      setFavoriteMovies([...favoriteMovies, movie]);\r\n\r\n      // Set showFavorites to true when adding the first favorite movie\r\n      if (!showFavorites) {\r\n        setShowFavorites(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleShowFavorites = () => {\r\n    setShowFavorites((prevShowFavorites) => !prevShowFavorites);\r\n    favoriteMovies.length > 0\r\n      ? setFavoritesButtonClicked(\r\n          (prevFavoritesButtonClicked) => !prevFavoritesButtonClicked\r\n        )\r\n      : setFavoritesButtonClicked(false);\r\n    if (!favoritesButtonClicked) {\r\n      // If we're switching to show favorites, clear the search\r\n      setSearchValue(\"\");\r\n      setFilteredTitles([]);\r\n    }\r\n  };\r\n\r\n  const filterMoviesByGenre = (movies, genre) => {\r\n    if (!genre) return movies;\r\n    return movies.filter((movie) => movie.genres.includes(genre));\r\n  };\r\n\r\n  const handleListTypeChange = (newListType) => {\r\n    // Clear everything first\r\n    setAllTitles([]);\r\n    setFilteredTitles([]);\r\n    setListType(newListType);\r\n    // console.log(\"List type changed to:\", newListType);\r\n  };\r\n\r\n  return (\r\n    <HomePageLayout\r\n      searchValue={searchValue}\r\n      handleSearch={setSearchValue}\r\n      favoriteMovies={favoriteMovies}\r\n      handleFavoriteClick={handleFavoriteClick}\r\n      showFavorites={showFavorites}\r\n      setShowFavorites={setShowFavorites}\r\n      toggleShowFavorites={toggleShowFavorites}\r\n      handleHomeClick={handleHomeClick}\r\n      favoritesButtonClicked={favoritesButtonClicked}\r\n      selectedGenre={selectedGenre} // Pass selectedGenre prop\r\n      setSelectedGenre={setSelectedGenre} // Pass setSelectedGenre prop\r\n      genres={genres} // Pass genres prop\r\n    >\r\n      {favoritesButtonClicked && favoriteMovies.length > 0 ? (\r\n        <Hero>FAVORITE MOVIES</Hero>\r\n      ) : (\r\n        <Hero>\r\n          WELCOME TO THE MOVIE DATABASE APP\r\n          <ButtonContainer>\r\n            <StyledButton\r\n              onClick={() => handleListTypeChange(\"top250\")}\r\n              active={listType === \"top250\"}\r\n            >\r\n              Top 250 Movies IMDB\r\n            </StyledButton>\r\n            <StyledButton\r\n              onClick={() => handleListTypeChange(\"mostPopular\")}\r\n              active={listType === \"mostPopular\"}\r\n            >\r\n              Most Popular Movies\r\n            </StyledButton>\r\n          </ButtonContainer>\r\n        </Hero>\r\n      )}\r\n\r\n      {searchValue && isSearching ? (\r\n        <Background>\r\n          <Container>\r\n            <MoviesWrapper>\r\n              <Loader>Searching...</Loader>\r\n            </MoviesWrapper>\r\n          </Container>\r\n        </Background>\r\n      ) : searchValue && !isSearching && filteredTitles.length === 0 ? (\r\n        <Background>\r\n          <Container>\r\n            <MoviesWrapper>\r\n              <Error>\r\n                No movies found for \"{searchValue}\", please try again\r\n              </Error>\r\n            </MoviesWrapper>\r\n          </Container>\r\n        </Background>\r\n      ) : (\r\n        <TitlesList\r\n          fetching={fetching}\r\n          titleInfo={(() => {\r\n            //for debugging:\r\n            // console.log(\"favoritesButtonClicked:\", favoritesButtonClicked);\r\n            // console.log(\"favoriteMovies:\", favoriteMovies);\r\n            // console.log(\"searchValue:\", searchValue);\r\n            // console.log(\"filteredTitles:\", filteredTitles);\r\n            // console.log(\"titleInfo:\", titleInfo);\r\n            return favoritesButtonClicked && favoriteMovies.length > 0\r\n              ? filterMoviesByGenre(favoriteMovies, selectedGenre)\r\n              : searchValue\r\n              ? filterMoviesByGenre(filteredTitles, selectedGenre)\r\n              : filterMoviesByGenre(titleInfo, selectedGenre);\r\n          })()}\r\n          error={error}\r\n          favoriteMovies={favoriteMovies}\r\n          handleFavoriteClick={handleFavoriteClick}\r\n          searchValue={searchValue}\r\n          listType={listType} // Pass listType to TitlesList\r\n        />\r\n      )}\r\n      <GoToTopButton />\r\n    </HomePageLayout>\r\n  );\r\n}\r\n","import styled, {keyframes} from \"styled-components\";\r\n\r\nexport const Background = styled.div`\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 1rem 1.5rem;\r\n  min-height: 60vh;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 120rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  color: #fafafa;\r\n`;\r\n\r\nexport const MoviesWrapper = styled.div`\r\n  min-height: 80rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 120rem;\r\n  justify-content: center;\r\n`;\r\n\r\n// Define the opacity animation\r\nconst textOpacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.5; // 50% opacity\r\n  }\r\n  100% {\r\n    opacity: 1; // 100% opacity\r\n  }\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: #ff8427;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  border-radius: 5px;\r\n   span{animation: ${textOpacityAnimation} 1s infinite alternate};\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: rgb(255, 39, 39);\r\n  font-size: 1.6rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const MovieCard = styled.div`\r\n  max-width: calc(100% - 2rem);\r\n  margin: 1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: top;\r\n  padding: 1.5rem 1.5rem;\r\n  background-color: #fafafa;\r\n  \r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  transition: background-color 0.3s;\r\n\r\n @media (max-width: 768px) {\r\n  flex-direction: column;\r\n  align-items: center;}\r\n`;\r\nexport const Poster = styled.img`\r\n  width: 50%;\r\n  max-width: 38rem;\r\n  border-radius: 2rem;\r\n  display: block;\r\n  margin-right: 1rem;\r\n  box-shadow: 0px 2px 3px 3px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n  width: 100%;\r\n  margin-right: 0;\r\n  }\r\n`;\r\n  \r\nexport const InfoCard = styled.div`\r\n  width: 50%;\r\n  max-width: 38rem;\r\n  border-radius: 2rem;\r\n  display: block;\r\n  margin: 0 auto;\r\n  @media (max-width: 768px) {\r\n  width: 100%;}\r\n`;\r\n\r\nexport const Info = styled.h2`\r\n  font-size: 1.6rem;\r\n  line-height: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n  color: #2b2922;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n`;\r\nexport const ImdbLink = styled.a`\r\ncolor: unset;\r\n`;\r\n\r\nexport const TrailerContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 40rem;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin-bottom: 1rem;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n`;\r\n\r\nexport const Trailer = styled.iframe`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Loader,\r\n  Error,\r\n  MovieCard,\r\n  Poster,\r\n  InfoCard,\r\n  Info,\r\n  ImdbLink as Link,\r\n} from \"./TitleDetails.style\";\r\n\r\nexport function TitleDetails({ fetching, titleInfo, error }) {\r\n  // Debugging logs\r\n  // console.log(\"TitleDetails - Fetching:\", fetching);\r\n  // console.log(\"TitleDetails - Title Info:\", titleInfo);\r\n  // console.log(\"TitleDetails - Error:\", error);\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <MoviesWrapper>\r\n          {fetching && (\r\n            <Loader>\r\n              <span>Loading movie details...</span>\r\n            </Loader>\r\n          )}\r\n          {error && <Error>Error: {error}</Error>}\r\n          {!fetching && !error && titleInfo && (\r\n            <MovieCard>\r\n              {titleInfo.primaryImage && (\r\n                <Poster src={titleInfo.primaryImage} />\r\n              )}\r\n              <InfoCard>\r\n                {titleInfo.averageRating && (\r\n                  <Info>Rating: {titleInfo.averageRating}</Info>\r\n                )}\r\n                {titleInfo.originalTitle && (\r\n                  <Info>Title: {titleInfo.originalTitle}</Info>\r\n                )}\r\n                {titleInfo.description && (\r\n                  <Info>Description: {titleInfo.description}</Info>\r\n                )}\r\n                {titleInfo.releaseDate && (\r\n                  <Info>\r\n                    Release Date:{\" \"}\r\n                    {new Date(titleInfo.releaseDate)\r\n                      .toLocaleDateString(\"en-GB\")\r\n                      .replace(/\\//g, \".\")}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.runtimeMinutes && (\r\n                  <Info>Runtime: {titleInfo.runtimeMinutes}min</Info>\r\n                )}\r\n                {titleInfo.directors && titleInfo.directors.length > 0 && (\r\n                  <Info>\r\n                    Director:{\" \"}\r\n                    {titleInfo.directors.map((director, index) => (\r\n                      <span key={director.id}>\r\n                        <Link\r\n                          href={director.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {director.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.directors.length - 1 &&\r\n                          titleInfo.directors.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.budget && (\r\n                  <Info>\r\n                    Budget: {titleInfo.budget.toLocaleString(\"en-US\")}$\r\n                  </Info>\r\n                )}\r\n                {titleInfo.grossWorldwide && (\r\n                  <Info>\r\n                    Gross Worldwide:{\" \"}\r\n                    {titleInfo.grossWorldwide.toLocaleString(\"en-GB\")}$\r\n                  </Info>\r\n                )}\r\n                {titleInfo.genres && titleInfo.genres.length > 0 && (\r\n                  <Info>\r\n                    Genre:{\" \"}\r\n                    {titleInfo.genres.map((gen, index) => (\r\n                      <span key={index}>\r\n                        {gen}\r\n                        {index !== titleInfo.genres.length - 1 &&\r\n                          titleInfo.genres.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.cast && titleInfo.cast.length > 0 && (\r\n                  <Info>\r\n                    Cast:{\" \"}\r\n                    {titleInfo.cast.map((actor, index) => (\r\n                      <span key={actor.id}>\r\n                        <Link\r\n                          href={actor.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {actor.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.cast.length - 1 &&\r\n                          titleInfo.cast.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.writers && titleInfo.writers.length > 0 && (\r\n                  <Info>\r\n                    Writers:{\" \"}\r\n                    {titleInfo.writers.map((writer, index) => (\r\n                      <span key={writer.id}>\r\n                        <Link\r\n                          href={writer.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {writer.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.writers.length - 1 &&\r\n                          titleInfo.writers.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.contentRating && (\r\n                  <Info>Content Rating: {titleInfo.contentRating}</Info>\r\n                )}\r\n                {titleInfo.url && (\r\n                  <Link\r\n                    href={titleInfo.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <Info>View on IMDb</Info>\r\n                  </Link>\r\n                )}\r\n              </InfoCard>\r\n            </MovieCard>\r\n          )}\r\n        </MoviesWrapper>\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MovieLayout } from \"../components/Layout\";\r\nimport { Hero } from \"../components/sections/imdbList\";\r\nimport { TitleDetails } from \"../components/sections/TitleDetails\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useGetTitles } from \"../components/hooks/useGetTitles\";\r\n\r\nexport function MoviePage() {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const listType =\r\n    new URLSearchParams(location.search).get(\"listType\") || \"top250\";\r\n  const { fetching, titleInfo, error } = useGetTitles(id, listType);\r\n\r\n  // Debugging logs\r\n  // console.log(\"MoviePage - Fetching:\", fetching);\r\n  // console.log(\"MoviePage - Title Info:\", titleInfo);\r\n  // console.log(\"MoviePage - Error:\", error);\r\n\r\n  return (\r\n    <MovieLayout>\r\n      <Hero>{titleInfo.primaryTitle}</Hero>\r\n      <TitleDetails fetching={fetching} titleInfo={titleInfo} error={error} />\r\n    </MovieLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HomePage, MoviePage } from \"./pages\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <HomePage />,\r\n  },\r\n  {\r\n    path: \"/:id\",\r\n    component: <MoviePage />,\r\n  },\r\n];\r\n\r\n// basename used for GitPages deployment page\r\nconst basename =\r\n  process.env.NODE_ENV === \"production\" ? \"/MovieAppProject\" : \"\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={basename}>\r\n      <Routes>\r\n        {routes.map((route) => (\r\n          <Route\r\n            path={route.path}\r\n            element={route.component}\r\n            key={route.path}\r\n          />\r\n        ))}\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}