{"version":3,"sources":["components/Header/UI/Logo/logo.jpg","components/sections/imdbList/Hero/Hero.style.js","components/sections/imdbList/Hero/Hero.jsx","components/sections/imdbList/Titles/TitlesList.style.js","components/sections/imdbList/Titles/TitlesList.jsx","components/Header/Header.style.js","components/Header/UI/Favourites/Favorites.style.js","components/Header/UI/Favourites/Favorites.jsx","components/Header/HomePageHeader.jsx","components/Header/MovieHeader.jsx","components/Header/UI/Input/Input.style.js","components/Header/UI/Input/Input.jsx","components/Footer/Footer.style.js","components/Footer/Footer.jsx","components/Layout/HomePageLayout.jsx","components/Layout/MovieLayout.jsx","components/hooks/useGetTitles.js","components/GoTopButton/GoTopButton.jsx","pages/HomePage.jsx","components/sections/TitleDetails/TitleDetails.style.js","components/sections/TitleDetails/TitleDetails.jsx","pages/MoviePage.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","Hero","_ref","children","React","createElement","Background","MoviesWrapper","_templateObject3","_templateObject4","textOpacityAnimation","keyframes","_templateObject5","Loader","_templateObject6","Error","_templateObject7","MovieCard","_templateObject8","PosterWrapper","_templateObject9","Poster","img","_templateObject10","Info","h2","_templateObject11","Min","_templateObject12","size","FavoriteIcon","FontAwesomeIcon","attrs","_ref2","icon","style","color","ismoviefavorite","_templateObject13","ButtonContainer","_templateObject14","_templateObject15","MovieListButton","button","_templateObject16","_ref3","active","css","_templateObject17","ShowMoreButton","_templateObject18","TitlesList","fetching","titleInfo","error","handleFavoriteClick","favoriteMovies","listType","_ref$displayedItems","displayedItems","handleShowMore","getResizedImage","imageUrl","height","arguments","length","undefined","replace","concat","Fragment","map","movie","index","some","favMovie","id","key","Link","to","originalTitle","primaryImage","src","averageRating","releaseDate","Date","toLocaleDateString","runtimeMinutes","genres","genre","reduce","prev","curr","fasStar","farStar","onClick","e","stopPropagation","title","Header","Logo","Nav","nav","GenreContainer","DefaultLink","GenreSelect","select","Option","option","FavoritesStyle","Favorites","toggleShowFavorites","data-favorites","HomePageHeader","searchValue","handleSearch","handleHomeClick","favoritesButtonClicked","selectedGenre","setSelectedGenre","logo","alt","value","onChange","target","Input","type","placeholder","MovieHeader","noMargin","SearchIcon","baseStyle","InputElement","input","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","faSearch","onFocus","onBlur","name","FooterText","h3","Contact","a","Footer","href","HomePageLayout","MovieLayout","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","useGetTitles","titleId","setTitleInfo","_useState3","_useState4","setError","_useState5","_useState6","setFetching","fetchingRef","useRef","options","url","headers","x-rapidapi-key","process","x-rapidapi-host","getImdbTitleDetails","_getImdbTitleDetails","apply","_asyncToGenerator","_callee","startTime","_yield$axios$request","data","status","statusText","elapsedTime","_context","current","now","axios","request","setTimeout","localStorage","setItem","JSON","stringify","t0","response","message","useEffect","cachedData","getItem","cachedTimestamp","isCacheValid","parse","styles","width","position","bottom","right","fontSize","lineHeight","backgroundColor","border","borderRadius","cursor","transition","transform","hover","default","GoToTopButton","isVisible","setIsVisible","isHovered","setIsHovered","toggleVisibility","window","scrollY","addEventListener","removeEventListener","scrollTo","top","behavior","_objectSpread","onMouseEnter","onMouseLeave","HomePage","sessionStorage","setListType","_useGetTitles","allTitles","setAllTitles","filteredTitles","setFilteredTitles","_useState7","_useState8","setSearchValue","_useState9","_useState10","isSearching","setIsSearching","_useState11","_useState12","setFavoriteMovies","_useState13","_useState14","showFavorites","setShowFavorites","_useState15","_useState16","setFavoritesButtonClicked","_useState17","_useState18","debouncedSearch","func","wait","timeout","debounced","_len","args","Array","_key","clearTimeout","clear","debounce","lowerCaseSearch","toLowerCase","filter","includes","updatedFavorites","_toConsumableArray","filterMoviesByGenre","movies","_useState19","_useState20","currentPage","setCurrentPage","handleListTypeChange","newListType","prevShowFavorites","prevFavoritesButtonClicked","InfoCard","ImdbLink","iframe","TitleDetails","description","directors","director","rel","fullName","budget","toLocaleString","grossWorldwide","gen","cast","actor","writers","writer","contentRating","MoviePage","useParams","location","useLocation","URLSearchParams","search","get","rank","primaryTitle","routes","path","component","basename","App","BrowserRouter","Routes","route","Route","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c67e6511.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e3af4992.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 8vh;\r\n  background-image: linear-gradient(#fafafa, lightgrey);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  line-height: 1.05em;\r\n  color: #2b2922;\r\n  width: 100%;\r\n  max-width: 60rem;\r\n  text-align: center;\r\n  margin: 1rem auto;\r\n  padding: 1rem;\r\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.2);\r\n  border-radius: 3px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container, Title } from \"./Hero.style\";\r\n\r\nexport function Hero({ children }) {\r\n  return (\r\n    <Container>\r\n      <Title>{children}</Title>\r\n    </Container>\r\n  );\r\n}\r\n","import styled, { css, keyframes } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Background = styled.div`\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 2rem 1.5rem;\r\n  min-height: 76dvh;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 155rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  color: #fafafa;\r\n`;\r\n\r\nexport const MoviesWrapper = styled.div`\r\n  min-height: 20rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\n// Define the opacity animation\r\nconst textOpacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.5; // 50% opacity\r\n  }\r\n  100% {\r\n    opacity: 1; // 100% opacity\r\n  }\r\n`;\r\nexport const Loader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: #ff8427;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  span{animation: ${textOpacityAnimation} 1s infinite alternate};\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: rgb(255, 77, 1);\r\n  font-size: 1.6rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const MovieCard = styled.div`\r\n  max-width: 25rem;\r\n  width: 100%;\r\n  margin: 0 1.5rem 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: top;\r\n  align-items: center;\r\n  padding: 1.5rem 1.5rem;\r\n  background-color: #f0f0f0;\r\n  text-align: center;\r\n  border-radius: 3rem;\r\n  transition:all 0.3s ease-in-out;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background-color: #e0e0e0;\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n    }\r\n`;\r\n\r\nexport const PosterWrapper = styled.div`\r\n  width: 25rem;\r\n  overflow: hidden;\r\n  border-top-left-radius: 1.8rem;\r\n  border-top-right-radius: 1.8rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n  border-bottom-left-radius: 0.5rem;\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  width: 100%;\r\n  height: 36rem;\r\n  object-fit: cover;\r\n  border-radius: 1.8rem 1.8rem 0.5rem 0.5rem;\r\n  display: block;\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  ${MovieCard}:hover & {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const Info = styled.h2`\r\n  font-size: 1.8rem;\r\n  line-height: 2.4rem;\r\n  font-weight: bold;\r\n  color: #2b2922;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const Min = styled.div`\r\n  min-height: ${({ size }) => size};\r\n  align-items: top;\r\n  justify-content: center;\r\n  display: flex;\r\n`;\r\n\r\nexport const FavoriteIcon = styled(FontAwesomeIcon).attrs(\r\n  ({ icon, ismoviefavorite }) => ({\r\n    icon,\r\n    style: {\r\n      color: ismoviefavorite === \"true\" ? \"gold\" : \"rgba(100, 100, 100, 0.5)\",\r\n    },\r\n  })\r\n)`\r\n  display: inline-block;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  z-index: 4;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const SearchError = styled.div`\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin: 2rem 0;\r\n  font-size: 1.5rem;\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 2rem 1.5rem;\r\n  min-height: 62vh;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0.5rem 0 0;\r\n`;\r\n\r\nexport const MovieListButton = styled.button`\r\n  background-color: #f0f0f0;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  color: #2b2922;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0 0.5rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1.6rem;\r\n  font-family: sans-serif;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      font-weight: bold;\r\n      box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n      background-color: #e0e0e0; \r\n    `}\r\n\r\n  &:hover {\r\n    background-color: #e0e0e0;   \r\n  }\r\n\r\n`;\r\nexport const ShowMoreButton = styled.button`\r\n  background-color: #f0f0f0;\r\n  color: #2b2922;\r\n  border: 1px solid #ccc;\r\n  padding: 8px 16px 0;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: background-color, box-shadow 0.3s;\r\n  \r\n  &:hover {\r\n    background-color: #e0e0e0;\r\n    box-shadow: none;\r\n  }\r\n`;","import React from \"react\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Error,\r\n  MovieCard,\r\n  PosterWrapper,\r\n  Poster,\r\n  Info,\r\n  Min,\r\n  FavoriteIcon,\r\n  Loader,\r\n  ButtonContainer,\r\n  ShowMoreButton,\r\n} from \"./TitlesList.style\";\r\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function TitlesList({\r\n  fetching,\r\n  titleInfo,\r\n  error,\r\n  handleFavoriteClick,\r\n  favoriteMovies,\r\n  listType,\r\n  displayedItems = [], // Ensure displayedItems is received as a prop\r\n  handleShowMore,\r\n}) {\r\n  // reduce img size to improve load time\r\n  const getResizedImage = (imageUrl, height = 360) => {\r\n    if (!imageUrl) return \"\";\r\n    return imageUrl.replace(/\\._V1_.*/, `._V1_UY${height}.jpg`);\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <MoviesWrapper>\r\n          {fetching ? (\r\n            <Loader>\r\n              <span>\r\n                Loading{\" \"}\r\n                {listType === \"top250\"\r\n                  ? \"top 250 IMDB movies\"\r\n                  : \"most popular movies\"}\r\n                ...\r\n              </span>{\" \"}\r\n            </Loader>\r\n          ) : error ? (\r\n            <Error>Error: {error}</Error>\r\n          ) : !titleInfo || titleInfo.length === 0 ? (\r\n            <Error>Sorry, no movies available, please try again.</Error>\r\n          ) : (\r\n            <>\r\n              {displayedItems.map((movie, index) => {\r\n                const ismoviefavorite = favoriteMovies.some(\r\n                  (favMovie) => favMovie.id === movie.id\r\n                );\r\n\r\n                return (\r\n                  <MovieCard key={movie.id}>\r\n                    <Min size=\"10rem\">\r\n                      {/* This Link component will navigate to the movie details page */}\r\n                      <Link\r\n                        to={`/${movie.id}?listType=${listType}&rank=${\r\n                          index + 1\r\n                        }&title=${movie.originalTitle}`}\r\n                      >\r\n                        {movie.primaryImage && (\r\n                          <PosterWrapper>\r\n                            <Poster src={getResizedImage(movie.primaryImage)} />\r\n                          </PosterWrapper>\r\n                        )}\r\n\r\n                        {movie.originalTitle && (\r\n                          <Min size=\"6rem\">\r\n                            <Info>\r\n                              {index + 1}.{movie.originalTitle}\r\n                            </Info>\r\n                          </Min>\r\n                        )}\r\n                        {movie.averageRating && (\r\n                          <Info>Rating: {movie.averageRating}</Info>\r\n                        )}\r\n                        {movie.releaseDate && (\r\n                          <Info>\r\n                            Release date:{\" \"}\r\n                            {new Date(movie.releaseDate)\r\n                              .toLocaleDateString(\"en-GB\")\r\n                              .replace(/\\//g, \".\")}\r\n                          </Info>\r\n                        )}\r\n                        {movie.runtimeMinutes && (\r\n                          <Info>Runtime: {movie.runtimeMinutes}min</Info>\r\n                        )}\r\n                        {movie.genres && movie.genres.length > 0 && (\r\n                          <Min size=\"6rem\">\r\n                            <Info>\r\n                              Genre:{\" \"}\r\n                              {movie.genres\r\n                                .map((genre, index) => (\r\n                                  <span key={`${genre}-${index}`}>{genre}</span>\r\n                                ))\r\n                                .reduce((prev, curr) => [prev, \", \", curr])}\r\n                            </Info>\r\n                          </Min>\r\n                        )}\r\n                      </Link>\r\n                    </Min>\r\n                    <FavoriteIcon\r\n                      icon={ismoviefavorite === true ? fasStar : farStar}\r\n                      ismoviefavorite={ismoviefavorite ? \"true\" : \"false\"}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation(); // Prevent propagation to the parent link\r\n                        handleFavoriteClick(movie);\r\n                      }}\r\n                      title=\"Add/Remove Favourite\"\r\n                    />\r\n                  </MovieCard>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </MoviesWrapper>\r\n        {displayedItems.length < titleInfo.length && (\r\n          <ButtonContainer>\r\n            <ShowMoreButton onClick={handleShowMore}>\r\n              Show More <br />▼\r\n            </ShowMoreButton>\r\n          </ButtonContainer>\r\n        )}\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link as DefaultLink } from \"react-router-dom\";\r\n\r\nexport const Header = styled.div`\r\n  padding: 0.5rem 1.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-image: linear-gradient(#1e212bbd, #eaeaea);\r\n  min-height: 5rem;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  display: block;\r\n  background-color: #f0f0f0;\r\n  z-index: 9999;\r\n  max-height: 4rem;\r\n  border-radius: 1rem;\r\n  margin: 8px 1.6rem 8px 0;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: box-shadow ease 0.3s;\r\n   &:hover {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 150rem;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Link = styled(DefaultLink)`\r\n  color: #1e212b;\r\n  background-color: #f0f0f0;\r\n  display: block;\r\n  font-size: 1.8rem;\r\n  line-height: 3rem;\r\n  font-weight: 600;\r\n  padding: 8px 1.6rem;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.3s;\r\n\r\n   &:hover {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const GenreContainer = styled.div`\r\n  position: absolute;\r\n  left: 19rem;\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const GenreSelect = styled.select`\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  height: 4rem;\r\n  color: #2b2922;\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  background-color: #F0F0F0;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.3s;\r\n   \r\n  &:hover {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:focus{\r\n  outline:none;}\r\n  &:active {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Option = styled.option`\r\n  &:focus,\r\n  &:active {\r\n    box-shadow: none;\r\n    border: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavoritesStyle = styled.div`\r\n  display: flex;\r\n  border-radius: 1rem;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #2b2922;\r\n  background-color: #f0f0f0;\r\n  z-index: 5;\r\n  height: 3rem;\r\n  padding: 0.5rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  transition: box-shadow 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:active,\r\n  &:focus {\r\n    box-shadow: none;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  &::after {\r\n    content: attr(data-favorites);\r\n    margin-left: 0.5rem;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 5.1rem;\r\n    color: #2b2922;\r\n    z-index: 6;\r\n    font-size: 1.6rem;\r\n    line-height: 2.4rem;\r\n    width: 2rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  FavoriteIcon,\r\n  Info,\r\n} from \"../../../sections/imdbList/Titles/TitlesList.style\";\r\nimport { FavoritesStyle } from \"./Favorites.style\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container, Nav } from \"../../Header.style\";\r\n\r\nexport const Favorites = ({ favoriteMovies, toggleShowFavorites }) => {\r\n  const ismoviefavorite = favoriteMovies.length > 0;\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <FavoritesStyle\r\n          onClick={toggleShowFavorites}\r\n          data-favorites={ismoviefavorite ? favoriteMovies.length : \"\"}\r\n          title={\r\n            ismoviefavorite === true\r\n              ? favoriteMovies.length + \" Favorites\"\r\n              : \"No favorite movies selected.\"\r\n          }\r\n        >\r\n          <Info>Fav&nbsp;</Info>\r\n          <FavoriteIcon\r\n            icon={ismoviefavorite === true ? fasStar : farStar}\r\n            ismoviefavorite={ismoviefavorite ? \"true\" : \"false\"}\r\n          />\r\n        </FavoritesStyle>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Header,\r\n  Logo,\r\n  Container,\r\n  GenreContainer,\r\n  GenreSelect,\r\n  Option,\r\n} from \"./Header.style\";\r\nimport { Link as DefaultLink } from \"react-router-dom\";\r\nimport { Input } from \"./\";\r\nimport { Favorites } from \"./UI/Favourites/Favorites\";\r\nimport logo from \"./UI/Logo/logo.jpg\";\r\n\r\nexport function HomePageHeader({\r\n  searchValue,\r\n  handleSearch,\r\n  favoriteMovies,\r\n  toggleShowFavorites,\r\n  handleHomeClick,\r\n  favoritesButtonClicked,\r\n  selectedGenre,\r\n  setSelectedGenre,\r\n  genres,\r\n}) {\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <DefaultLink to=\"/\" onClick={handleHomeClick}>\r\n          <Logo src={logo} alt=\"Homepage Logo\" title=\"Home Page\" />\r\n        </DefaultLink>\r\n\r\n        <Favorites\r\n          favoriteMovies={favoriteMovies}\r\n          toggleShowFavorites={toggleShowFavorites}\r\n        >\r\n          Fav\r\n        </Favorites>\r\n\r\n        <GenreContainer>\r\n          <GenreSelect\r\n            id=\"genre-select\"\r\n            value={selectedGenre}\r\n            onChange={(e) => setSelectedGenre(e.target.value)}\r\n          >\r\n            <Option value=\"\" title=\"Genres filter\">\r\n              All Genres\r\n            </Option>\r\n            {genres &&\r\n              genres.map((genre) => (\r\n                <Option key={genre} value={genre}>\r\n                  {genre}\r\n                </Option>\r\n              ))}\r\n          </GenreSelect>\r\n        </GenreContainer>\r\n\r\n        {!favoritesButtonClicked && (\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"\"\r\n            id=\"Search\"\r\n            value={searchValue}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n          />\r\n        )}\r\n      </Container>\r\n    </Header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Header, Nav, Container, Logo } from \"./Header.style\";\r\nimport { Link as DefaultLink } from \"react-router-dom\";\r\nimport logo from \"../Header/UI/Logo/logo.jpg\";\r\nexport function MovieHeader() {\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <Nav>\r\n          <DefaultLink to=\"/\">\r\n            <Logo src={logo} alt=\"Reload Logo\" title=\"Home\" />\r\n          </DefaultLink>\r\n        </Nav>\r\n      </Container>\r\n    </Header>\r\n  );\r\n}\r\n","import styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  min-width: 30rem;\r\n\r\n  ${({ noMargin }) =>\r\n    noMargin\r\n      ? \"\"\r\n      : css`\r\n          margin-bottom: 1rem;\r\n        `}\r\n`;\r\n\r\nexport const SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  display: block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  right: 1rem;\r\n  transform: translateY(-45%);\r\n  color: rgba(100, 100, 100, 0.5);\r\n  z-index: 4;\r\n`;\r\n\r\nconst baseStyle = css`\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  color: #1e212b;\r\n  display: block;\r\n  max-width: 20%;\r\n  padding: 0.7rem 1rem;\r\n  border-radius: 1rem;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin: 5px 0;\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:focus {\r\n   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const InputElement = styled.input`\r\n  ${baseStyle}\r\n  &[type=\"search\"] {\r\n    height: 4rem;\r\n    position: absolute;\r\n    right: 0;\r\n    transform: translateY(-60%);\r\n    background-color: #f0f0f0;\r\n    font-size: 1.7rem;\r\n    z-index: 3;\r\n  }\r\n`;\r\n","import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Container, InputElement, SearchIcon } from \"./Input.style\";\r\n\r\nexport function Input({ type, value, onChange, placeholder }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  return (\r\n    <Container noMargin>\r\n      {!isFocused && <SearchIcon icon={faSearch} />}{\" \"}\r\n      {/* Conditional rendering of the search icon */}\r\n      <InputElement\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        name=\"search\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: #1e212b;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n`;\r\n\r\nexport const FooterText = styled.h3`\r\n  color: #fafafa;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  font-weight: 400;\r\n  padding: 1rem 1.5rem;\r\n  text-align: right;\r\n`;\r\n\r\nexport const Contact = styled.a`\r\n  color: #fafafa;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  font-weight: 400;\r\n  transition: color 0.3s;\r\n  &:hover {\r\n    color: lightskyblue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, FooterText, Contact } from \"./Footer.style\";\r\n\r\nexport function Footer() {\r\n  return (\r\n    <Container>\r\n      <FooterText>\r\n        Designed and developed by: <br></br>\r\n        <Contact href=\"mailto:ilie.rasa@gmail.com\">\r\n          Rasa I. Front-end Developer\r\n        </Contact>{\" \"}\r\n      </FooterText>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HomePageHeader } from \"../Header\";\r\nimport { Footer } from \"../Footer\";\r\n\r\nexport function HomePageLayout({\r\n  children,\r\n  searchValue,\r\n  handleSearch,\r\n  handleHomeClick,\r\n  favoriteMovies,\r\n  toggleShowFavorites,\r\n  favoritesButtonClicked,\r\n  selectedGenre, // Add selectedGenre prop\r\n  setSelectedGenre, // Add setSelectedGenre prop\r\n  genres, // Add genres prop\r\n}) {\r\n  return (\r\n    <>\r\n      <HomePageHeader\r\n        searchValue={searchValue}\r\n        handleSearch={handleSearch}\r\n        favoriteMovies={favoriteMovies}\r\n        toggleShowFavorites={toggleShowFavorites}\r\n        handleHomeClick={handleHomeClick}\r\n        favoritesButtonClicked={favoritesButtonClicked}\r\n        selectedGenre={selectedGenre} // Pass selectedGenre prop\r\n        setSelectedGenre={setSelectedGenre} // Pass setSelected\r\n        genres={genres} // Pass genres prop\r\n      />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MovieHeader } from \"../Header\";\r\nimport { Footer } from \"../Footer\";\r\n\r\nexport function MovieLayout({ children }) {\r\n  return (\r\n    <>\r\n      <MovieHeader />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function useGetTitles(titleId, listType) {\r\n  const [titleInfo, setTitleInfo] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [fetching, setFetching] = useState(true);\r\n  const fetchingRef = useRef(fetching); // Use ref to track fetching state\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n  const CACHE_DURATION = 24 * 60 * 60 * 1000 *7; // one week\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: titleId \r\n      ? `https://imdb236.p.rapidapi.com/imdb/${titleId}` \r\n      : listType === \"mostPopular\"\r\n        ? 'https://imdb236.p.rapidapi.com/imdb/most-popular-movies'\r\n        : 'https://imdb236.p.rapidapi.com/imdb/top250-movies',\r\n    headers: {\r\n      'x-rapidapi-key': apiKey,\r\n      'x-rapidapi-host': 'imdb236.p.rapidapi.com'\r\n    }\r\n  };\r\n\r\n  async function getImdbTitleDetails() {\r\n    try {\r\n      setFetching(true);\r\n      fetchingRef.current = true; // Update ref\r\n      \r\n      // Add minimum loading time of 1 second\r\n      const startTime = Date.now();\r\n      const { data, status, statusText } = await axios.request(options);\r\n      const elapsedTime = Date.now() - startTime;\r\n      const minimumLoadTime = 1000; // 1 second minimum loading time\r\n      \r\n      if (elapsedTime < minimumLoadTime) {\r\n        await new Promise(resolve => setTimeout(resolve, minimumLoadTime - elapsedTime));\r\n      }\r\n\r\n      if (status === 200) {\r\n        setTitleInfo(data);\r\n        // Restore cache storage\r\n        if (titleId) {\r\n          localStorage.setItem(`title_${titleId}`, JSON.stringify(data));\r\n          localStorage.setItem(`title_${titleId}_timestamp`, Date.now());\r\n        } else {\r\n          localStorage.setItem(listType, JSON.stringify(data));\r\n          localStorage.setItem(`${listType}_timestamp`, Date.now());\r\n        }\r\n        setFetching(false);\r\n        fetchingRef.current = false; // Update ref\r\n      } else {\r\n        setError(statusText);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        setError(\r\n          `Status ${err.response.status}; ${err.response.data.message}` ||\r\n            `Error ${err.response.status}: ${err.response.statusText}`\r\n        );\r\n      } else if (err.request) {\r\n        setError(\"No response from server. Please try again.\");\r\n      } else {\r\n        setError(err.message);\r\n      }\r\n    } finally {\r\n      setFetching(false);\r\n      fetchingRef.current = false; // Update ref\r\n      // console.log(\"fetching fetch finish: \" + fetchingRef.current); // Debugging log\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Reset states when listType changes\r\n    setTitleInfo([]);\r\n    setError(\"\");\r\n    setFetching(true);\r\n    fetchingRef.current = true;\r\n\r\n    // console.log(\"Starting fetch for listType:\", listType);\r\n\r\n    // Restore cache checking\r\n    if (titleId) {  \r\n      const cachedData = localStorage.getItem(`title_${titleId}`);\r\n      const cachedTimestamp = localStorage.getItem(`title_${titleId}_timestamp`);\r\n      const isCacheValid = cachedTimestamp && (Date.now() - cachedTimestamp < CACHE_DURATION);\r\n\r\n      if (cachedData && isCacheValid) {\r\n        // Add artificial delay even for cached data\r\n        setTimeout(() => {\r\n          setTitleInfo(JSON.parse(cachedData));\r\n          setFetching(false);\r\n          fetchingRef.current = false;\r\n        }, 1000);\r\n      } else {\r\n        getImdbTitleDetails();\r\n      }\r\n    } else {\r\n      const cachedData = localStorage.getItem(listType);\r\n      const cachedTimestamp = localStorage.getItem(`${listType}_timestamp`);\r\n      const isCacheValid = cachedTimestamp && (Date.now() - cachedTimestamp < CACHE_DURATION);\r\n\r\n      if (cachedData && isCacheValid) {\r\n        // Add artificial delay even for cached data\r\n        setTimeout(() => {\r\n          setTitleInfo(JSON.parse(cachedData));\r\n          setFetching(false);\r\n          fetchingRef.current = false;\r\n        }, 1000);\r\n      } else {\r\n        getImdbTitleDetails();\r\n      }\r\n    }\r\n\r\n  }, [titleId, listType]);\r\n\r\n  return { fetching, titleInfo, error };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst GoToTopButton = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const toggleVisibility = () => {\r\n    if (window.scrollY > 600) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsHovered(false);\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isVisible && (\r\n        <button\r\n          title=\"Go to top\"\r\n          onClick={scrollToTop}\r\n          style={{\r\n            ...styles.button,\r\n            ...(isHovered ? styles.hover : styles.default),\r\n          }}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  button: {\r\n    height: \"4rem\",\r\n    width: \"4rem\",\r\n    position: \"fixed\",\r\n    bottom: \"1.5rem\",\r\n    right: \"1rem\",\r\n    fontSize: \"1.8rem\",\r\n    lineHeight: \"3rem\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    color: \"#1e212b\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.3s ease\",\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n  hover: {\r\n    backgroundColor: \"rgba(30, 33, 43, 0.7)\",\r\n    color: \"#fff\",\r\n  },\r\n  default: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    color: \"#1e212b\",\r\n  },\r\n};\r\n\r\nexport default GoToTopButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Hero, TitlesList } from \"../components/sections/imdbList\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Loader,\r\n  Error,\r\n  ButtonContainer,\r\n  MovieListButton,\r\n} from \"../components/sections/imdbList/Titles/TitlesList.style\";\r\nimport { HomePageLayout } from \"../components/Layout\";\r\nimport { useGetTitles } from \"../components/hooks/useGetTitles\";\r\nimport GoToTopButton from \"../components/GoTopButton/GoTopButton\";\r\n\r\nexport function HomePage() {\r\n  const DEFAULT_LIST_TYPE = \"top250\";\r\n  const [listType, setListType] = useState(() => {\r\n    // Check if we're in an existing session\r\n    return sessionStorage.getItem(\"currentListType\") || DEFAULT_LIST_TYPE;\r\n  });\r\n  const { fetching, titleInfo, error } = useGetTitles(null, listType);\r\n  const [allTitles, setAllTitles] = useState([]);\r\n  const [filteredTitles, setFilteredTitles] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [favoriteMovies, setFavoriteMovies] = useState(\r\n    JSON.parse(localStorage.getItem(\"favoriteMovies\")) || []\r\n  ); // Load favorite movies from local storage\r\n  const [showFavorites, setShowFavorites] = useState(false);\r\n  const [favoritesButtonClicked, setFavoritesButtonClicked] = useState(false);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // New state for selected genre\r\n\r\n  const genres = [\r\n    \"Action\",\r\n    \"Adventure\",\r\n    \"Animation\",\r\n    \"Comedy\",\r\n    \"Drama\",\r\n    \"Fantasy\",\r\n    \"Horror\",\r\n    \"Mystery\",\r\n    \"Romance\",\r\n    \"Sci-Fi\",\r\n  ];\r\n\r\n  const handleHomeClick = () => {\r\n    setShowFavorites(false); // Reset showFavorites state\r\n    setFavoritesButtonClicked(false); // Reset favoritesButtonClicked state\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAllTitles(titleInfo);\r\n  }, [titleInfo]);\r\n\r\n  //ensure that the search function is not called on every keystroke but only after the user has stopped typing for a specified delay\r\n  function debounce(func, wait) {\r\n    let timeout;\r\n\r\n    const debounced = (...args) => {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n\r\n    debounced.clear = function () {\r\n      clearTimeout(timeout);\r\n    };\r\n\r\n    return debounced;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsSearching(true);\r\n    const debouncedSearch = debounce(() => {\r\n      if (searchValue) {\r\n        const lowerCaseSearch = searchValue.toLowerCase();\r\n        const filteredTitles = allTitles.filter((movie) =>\r\n          movie.originalTitle.toLowerCase().includes(lowerCaseSearch)\r\n        );\r\n        setFilteredTitles(filteredTitles);\r\n        setIsSearching(false);\r\n      } else {\r\n        setFilteredTitles([]);\r\n        setIsSearching(false);\r\n      }\r\n    }, 300);\r\n    debouncedSearch();\r\n\r\n    return () => {\r\n      debouncedSearch.clear();\r\n    };\r\n  }, [searchValue, allTitles]);\r\n\r\n  useEffect(() => {\r\n    // Save favorite movies to local storage whenever they are updated\r\n    localStorage.setItem(\"favoriteMovies\", JSON.stringify(favoriteMovies));\r\n  }, [favoriteMovies]);\r\n\r\n  const handleFavoriteClick = (movie) => {\r\n    const isAlreadyFavorite = favoriteMovies.some(\r\n      (favMovie) => favMovie.id === movie.id\r\n    );\r\n\r\n    if (isAlreadyFavorite) {\r\n      const updatedFavorites = favoriteMovies.filter(\r\n        (favMovie) => favMovie.id !== movie.id\r\n      );\r\n      setFavoriteMovies(updatedFavorites);\r\n\r\n      // Check if there are any favorite movies left after removing the current movie\r\n      if (updatedFavorites.length === 0) {\r\n        setShowFavorites(false); // No favorite movies left, hide favorites\r\n        setFavoritesButtonClicked(false); // Reset favorites button click state\r\n      }\r\n    } else {\r\n      setFavoriteMovies([...favoriteMovies, movie]);\r\n\r\n      // Set showFavorites to true when adding the first favorite movie\r\n      if (!showFavorites) {\r\n        setShowFavorites(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleShowFavorites = () => {\r\n    setShowFavorites((prevShowFavorites) => !prevShowFavorites);\r\n    favoriteMovies.length > 0\r\n      ? setFavoritesButtonClicked(\r\n          (prevFavoritesButtonClicked) => !prevFavoritesButtonClicked\r\n        )\r\n      : setFavoritesButtonClicked(false);\r\n    if (!favoritesButtonClicked) {\r\n      // If we're switching to show favorites, clear the search\r\n      setSearchValue(\"\");\r\n      setFilteredTitles([]);\r\n    }\r\n  };\r\n\r\n  const filterMoviesByGenre = (movies, genre) => {\r\n    if (!genre) return movies;\r\n    return movies.filter((movie) => movie.genres.includes(genre));\r\n  };\r\n\r\n  //Show more button function\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  const handleShowMore = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handleListTypeChange = (newListType) => {\r\n    setAllTitles([]);\r\n    setFilteredTitles([]);\r\n    setListType(newListType);\r\n    sessionStorage.setItem(\"currentListType\", newListType);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  favoritesButtonClicked && favoriteMovies.length > 0\r\n    ? filterMoviesByGenre(favoriteMovies, selectedGenre)\r\n    : searchValue\r\n    ? filterMoviesByGenre(filteredTitles, selectedGenre)\r\n    : filterMoviesByGenre(titleInfo, selectedGenre);\r\n\r\n  const displayedItems = favoritesButtonClicked\r\n    ? filterMoviesByGenre(favoriteMovies, selectedGenre).slice(\r\n        0,\r\n        currentPage * itemsPerPage\r\n      )\r\n    : searchValue\r\n    ? filterMoviesByGenre(filteredTitles, selectedGenre).slice(\r\n        0,\r\n        currentPage * itemsPerPage\r\n      )\r\n    : filterMoviesByGenre(titleInfo, selectedGenre).slice(\r\n        0,\r\n        currentPage * itemsPerPage\r\n      );\r\n\r\n  return (\r\n    <HomePageLayout\r\n      searchValue={searchValue}\r\n      handleSearch={setSearchValue}\r\n      favoriteMovies={favoriteMovies}\r\n      handleFavoriteClick={handleFavoriteClick}\r\n      showFavorites={showFavorites}\r\n      setShowFavorites={setShowFavorites}\r\n      toggleShowFavorites={toggleShowFavorites}\r\n      handleHomeClick={handleHomeClick}\r\n      favoritesButtonClicked={favoritesButtonClicked}\r\n      selectedGenre={selectedGenre} // Pass selectedGenre prop\r\n      setSelectedGenre={setSelectedGenre} // Pass setSelectedGenre prop\r\n      genres={genres} // Pass genres prop\r\n    >\r\n      {favoritesButtonClicked && favoriteMovies.length > 0 ? (\r\n        <Hero>FAVORITE MOVIES</Hero>\r\n      ) : (\r\n        <Hero>\r\n          WELCOME TO THE MOVIE DATABASE APP\r\n          <ButtonContainer>\r\n            <MovieListButton\r\n              onClick={() => handleListTypeChange(\"top250\")}\r\n              active={listType === \"top250\"}\r\n            >\r\n              Top 250 Movies IMDB\r\n            </MovieListButton>\r\n            <MovieListButton\r\n              onClick={() => handleListTypeChange(\"mostPopular\")}\r\n              active={listType === \"mostPopular\"}\r\n            >\r\n              Most Popular Movies\r\n            </MovieListButton>\r\n          </ButtonContainer>\r\n        </Hero>\r\n      )}\r\n\r\n      {searchValue && isSearching ? (\r\n        <Background>\r\n          <Container>\r\n            <MoviesWrapper>\r\n              <Loader>Searching...</Loader>\r\n            </MoviesWrapper>\r\n          </Container>\r\n        </Background>\r\n      ) : searchValue && !isSearching && filteredTitles.length === 0 ? (\r\n        <Background>\r\n          <Container>\r\n            <MoviesWrapper>\r\n              <Error>\r\n                Sorry, no movies found for \"{searchValue}\", please try again.\r\n              </Error>\r\n            </MoviesWrapper>\r\n          </Container>\r\n        </Background>\r\n      ) : (\r\n        <TitlesList\r\n          fetching={fetching}\r\n          titleInfo={(() => {\r\n            //for debugging:\r\n            // console.log(\"favoritesButtonClicked:\", favoritesButtonClicked);\r\n            // console.log(\"favoriteMovies:\", favoriteMovies);\r\n            // console.log(\"searchValue:\", searchValue);\r\n            // console.log(\"filteredTitles:\", filteredTitles);\r\n            // console.log(\"titleInfo:\", titleInfo);\r\n            return favoritesButtonClicked && favoriteMovies.length > 0\r\n              ? filterMoviesByGenre(favoriteMovies, selectedGenre)\r\n              : searchValue\r\n              ? filterMoviesByGenre(filteredTitles, selectedGenre)\r\n              : filterMoviesByGenre(titleInfo, selectedGenre);\r\n          })()}\r\n          error={error}\r\n          favoriteMovies={favoriteMovies}\r\n          handleFavoriteClick={handleFavoriteClick}\r\n          searchValue={searchValue}\r\n          listType={listType} // Pass listType to TitlesList\r\n          displayedItems={displayedItems} // Pass displayedItems to TitlesList\r\n          handleShowMore={handleShowMore} // Pass handleShowMore to TitlesList\r\n        />\r\n      )}\r\n      <GoToTopButton />\r\n    </HomePageLayout>\r\n  );\r\n}\r\n","import styled, {keyframes} from \"styled-components\";\r\n\r\nexport const Background = styled.div`\r\n  background-image: linear-gradient(#1e212b, darkgrey);\r\n  padding: 1rem 1.5rem;\r\n  min-height: 60vh;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 120rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  color: #fafafa;\r\n`;\r\n\r\nexport const MoviesWrapper = styled.div`\r\n  min-height: 60rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 120rem;\r\n  justify-content: center;\r\n`;\r\n\r\n// Define the opacity animation\r\nconst textOpacityAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.5; // 50% opacity\r\n  }\r\n  100% {\r\n    opacity: 1; // 100% opacity\r\n  }\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  display: flex;\r\n  padding-top: 2rem;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: #ff8427;\r\n  font-size: 1.6rem;\r\n  line-height: 2.4rem;\r\n  border-radius: 5px;\r\n   span{animation: ${textOpacityAnimation} 1s infinite alternate};\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background-color: rgba(250, 250, 250, 0.15);\r\n  color: rgb(255, 77, 1);\r\n  font-size: 1.6rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const MovieCard = styled.div`\r\n  max-width: calc(100% - 2rem);\r\n  margin: 1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  padding: 1.5rem 1.5rem;\r\n  background-color: #fafafa;\r\n  align-items: flex-start;\r\n  border-radius: 3rem;\r\n  transition: background-color 0.3s;\r\n\r\n @media (max-width: 768px) {\r\n  flex-direction: column;\r\n  align-items: center;}\r\n`;\r\nexport const Poster = styled.img`\r\n  width: 50%;\r\n  max-width: 38rem;\r\n  border-radius: 2rem;\r\n  display: block;\r\n  margin-right: 1rem;\r\n  box-shadow: 0px 2px 3px 3px rgba(0, 0, 0, 0.2);\r\n  @media (max-width: 768px) {\r\n  width: 100%;\r\n  margin-right: 0;\r\n  }\r\n`;\r\n  \r\nexport const InfoCard = styled.div`\r\n  width: 50%;\r\n  max-width: 38rem;\r\n  border-radius: 2rem;\r\n  display: block;\r\n  margin: 0 auto;\r\n  @media (max-width: 768px) {\r\n  width: 100%;}\r\n`;\r\n\r\nexport const Info = styled.h2`\r\n  font-size: 1.6rem;\r\n  line-height: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n  color: #2b2922;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n`;\r\nexport const ImdbLink = styled.a`\r\ncolor: unset;\r\ntransition: color 0.3s;\r\n &:hover {\r\n    color: lightskyblue;\r\n  }\r\n`;\r\n\r\nexport const TrailerContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 40rem;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin-bottom: 1rem;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n`;\r\n\r\nexport const Trailer = styled.iframe`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Background,\r\n  Container,\r\n  MoviesWrapper,\r\n  Loader,\r\n  Error,\r\n  MovieCard,\r\n  Poster,\r\n  InfoCard,\r\n  Info,\r\n  ImdbLink as Link,\r\n} from \"./TitleDetails.style\";\r\n\r\nexport function TitleDetails({ fetching, titleInfo, error }) {\r\n  // Debugging logs\r\n  // console.log(\"TitleDetails - Fetching:\", fetching);\r\n  // console.log(\"TitleDetails - Title Info:\", titleInfo);\r\n  // console.log(\"TitleDetails - Error:\", error);\r\n\r\n  // reduce img size to improve load time\r\n  const getResizedImage = (imageUrl, width = 380) => {\r\n    if (!imageUrl) return \"\";\r\n    return imageUrl.replace(/\\._V1_.*/, `._V1_UX${width}.jpg`);\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <MoviesWrapper>\r\n          {fetching && (\r\n            <Loader>\r\n              <span>Loading movie details...</span>\r\n            </Loader>\r\n          )}\r\n          {error && <Error>Error: {error}</Error>}\r\n          {!fetching && !error && titleInfo && (\r\n            <MovieCard>\r\n              {titleInfo.primaryImage && (\r\n                <Poster src={getResizedImage(titleInfo.primaryImage)} />\r\n              )}\r\n              <InfoCard>\r\n                {titleInfo.averageRating && (\r\n                  <Info>Rating: {titleInfo.averageRating}</Info>\r\n                )}\r\n\r\n                {titleInfo.description && (\r\n                  <Info>Description: {titleInfo.description}</Info>\r\n                )}\r\n                {titleInfo.releaseDate && (\r\n                  <Info>\r\n                    Release Date:{\" \"}\r\n                    {new Date(titleInfo.releaseDate)\r\n                      .toLocaleDateString(\"en-GB\")\r\n                      .replace(/\\//g, \".\")}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.runtimeMinutes && (\r\n                  <Info>Runtime: {titleInfo.runtimeMinutes}min</Info>\r\n                )}\r\n                {titleInfo.directors && titleInfo.directors.length > 0 && (\r\n                  <Info>\r\n                    Director:{\" \"}\r\n                    {titleInfo.directors.map((director, index) => (\r\n                      <span key={`director-${director.id}`}>\r\n                        <Link\r\n                          href={director.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {director.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.directors.length - 1 &&\r\n                          titleInfo.directors.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.budget && (\r\n                  <Info>\r\n                    Budget: {titleInfo.budget.toLocaleString(\"en-US\")}$\r\n                  </Info>\r\n                )}\r\n                {titleInfo.grossWorldwide && (\r\n                  <Info>\r\n                    Gross Worldwide:{\" \"}\r\n                    {titleInfo.grossWorldwide.toLocaleString(\"en-GB\")}$\r\n                  </Info>\r\n                )}\r\n                {titleInfo.genres && titleInfo.genres.length > 0 && (\r\n                  <Info>\r\n                    Genre:{\" \"}\r\n                    {titleInfo.genres.map((gen, index) => (\r\n                      <span key={`${gen}-${index}`}>\r\n                        {gen}\r\n                        {index !== titleInfo.genres.length - 1 &&\r\n                          titleInfo.genres.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.cast && titleInfo.cast.length > 0 && (\r\n                  <Info>\r\n                    Cast:{\" \"}\r\n                    {titleInfo.cast.map((actor, index) => (\r\n                      <span key={`cast-${actor.id}-${index}`}>\r\n                        <Link\r\n                          href={actor.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {actor.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.cast.length - 1 &&\r\n                          titleInfo.cast.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.writers && titleInfo.writers.length > 0 && (\r\n                  <Info>\r\n                    Writers:{\" \"}\r\n                    {titleInfo.writers.map((writer, index) => (\r\n                      <span key={`writer-${writer.id}-${index}`}>\r\n                        <Link\r\n                          href={writer.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {writer.fullName}\r\n                        </Link>\r\n                        {index !== titleInfo.writers.length - 1 &&\r\n                          titleInfo.writers.length > 1 &&\r\n                          \", \"}\r\n                      </span>\r\n                    ))}\r\n                  </Info>\r\n                )}\r\n                {titleInfo.contentRating && (\r\n                  <Info>Content Rating: {titleInfo.contentRating}</Info>\r\n                )}\r\n                {titleInfo.url && (\r\n                  <Info>\r\n                    <Link\r\n                      href={titleInfo.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      View on IMDb\r\n                    </Link>\r\n                  </Info>\r\n                )}\r\n              </InfoCard>\r\n            </MovieCard>\r\n          )}\r\n        </MoviesWrapper>\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MovieLayout } from \"../components/Layout\";\r\nimport { Hero } from \"../components/sections/imdbList\";\r\nimport { TitleDetails } from \"../components/sections/TitleDetails\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useGetTitles } from \"../components/hooks/useGetTitles\";\r\n\r\nexport function MoviePage() {\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const listType =\r\n    new URLSearchParams(location.search).get(\"listType\") || \"top250\";\r\n  const rank = new URLSearchParams(location.search).get(\"rank\");\r\n  const { fetching, titleInfo, error } = useGetTitles(id, listType);\r\n\r\n  // Debugging logs\r\n  // console.log(\"MoviePage - Fetching:\", fetching);\r\n  // console.log(\"MoviePage - Title Info:\", titleInfo);\r\n  // console.log(\"MoviePage - Error:\", error);\r\n\r\n  return (\r\n    <MovieLayout>\r\n      <Hero>\r\n        {titleInfo.primaryTitle && rank\r\n          ? `${rank}.${titleInfo.primaryTitle}`\r\n          : titleInfo.primaryTitle && titleInfo.primaryTitle}\r\n      </Hero>\r\n      <TitleDetails fetching={fetching} titleInfo={titleInfo} error={error} />\r\n    </MovieLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HomePage, MoviePage } from \"./pages\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <HomePage />,\r\n  },\r\n  {\r\n    path: \"/:id\",\r\n    component: <MoviePage />,\r\n  },\r\n];\r\n\r\n// basename used for GitPages deployment page\r\nconst basename =\r\n  process.env.NODE_ENV === \"production\" ? \"/MovieAppProject\" : \"\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={basename}>\r\n      <Routes>\r\n        {routes.map((route) => (\r\n          <Route\r\n            path={route.path}\r\n            element={route.component}\r\n            key={route.path}\r\n          />\r\n        ))}\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}